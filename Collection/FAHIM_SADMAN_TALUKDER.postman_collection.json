{
	"info": {
		"_postman_id": "2e91f424-732d-475d-9b58-21134946942a",
		"name": "1st_Project_API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39704688"
	},
	"item": [
		{
			"name": "CreateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsondata=pm.response.json()\r",
							"pm.environment.set(\"id\",jsondata.bookingid)\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName=pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"var LastName=pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(LastName)\r",
							"pm.environment.set(\"LastName\",LastName)\r",
							"\r",
							"var Price=pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(Price)\r",
							"pm.environment.set(\"Price\",Price)\r",
							"\r",
							"//date\r",
							"const moment=require('moment')\r",
							"const today=moment()\r",
							"console.log(today.format(\"YYYY-MM-DD\"))\r",
							"var checkin=today.add(3,'D').add(3,'M').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkin\",checkin)\r",
							"var checkout=today.add(3,'D').add(8,'M').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkout\",checkout)\r",
							"\r",
							"\r",
							"var deposit=pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(deposit)\r",
							"pm.environment.set(\"deposit\",deposit)\r",
							"\r",
							"\r",
							"\r",
							"var needs=pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"console.log(needs)\r",
							"pm.environment.set(\"needs\",needs)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"firstname\" : \"{{firstName}}\",\r\n\"lastname\" : \"{{LastName}}\",\r\n\"totalprice\" : {{Price}},\r\n\"depositpaid\" : {{deposit}},\r\n\"bookingdates\" : {\r\n\"checkin\" : \"{{checkin}}\",\r\n\"checkout\" : \"{{checkout}}\"\r\n},\r\n\"additionalneeds\" : \"{{needs}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statusCode=pm.response.code\r",
							"console.log(statusCode)\r",
							"if (statusCode==200){\r",
							"var json=pm.response.json()\r",
							"pm.test(\"First Name Validation\",function(){pm.expect(json.firstname).to.eql(pm.environment.get(\"firstName\"))})\r",
							"var json=pm.response.json()\r",
							"pm.test(\"Last Name Validation\",function(){pm.expect(json.lastname).to.eql(pm.environment.get(\"LastName\"))})\r",
							"var json=pm.response.json()\r",
							"pm.test(\"Total Price Validation\",function(){pm.expect(json.totalprice.toString()).to.eql(pm.environment.get(\"Price\"))})\r",
							"var json=pm.response.json()\r",
							"pm.test(\"Total deposit Validation\",function(){pm.expect(json.depositpaid.toString()).to.eql(pm.environment.get(\"deposit\"))})\r",
							"var json=pm.response.json()\r",
							"pm.test(\"Checkin date Validation\",function(){pm.expect(json.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"))})\r",
							"var json=pm.response.json()\r",
							"pm.test(\"Checkout date Validation\",function(){pm.expect(json.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"))})\r",
							"var json=pm.response.json()\r",
							"pm.test(\"Additional needs Validation\",function(){pm.expect(json.additionalneeds).to.eql(pm.environment.get(\"needs\"))})\r",
							"}\r",
							" else if(statusCode==404){\r",
							"pm.test(\"Not found\")\r",
							"}\r",
							"else{\r",
							"pm.test(\"Something went wrong\")\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsondata=pm.response.json()\r",
							"pm.environment.set(\"access_token\",jsondata.token)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"username\": \"admin\",\r\n\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update_Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"var updated_firstName= pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"pm.environment.set(\"updated_firstName\",updated_firstName)\r",
							"\r",
							"//last name update\r",
							"var updated_lastName= pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"pm.environment.set(\"updated_lastName\",updated_lastName)\r",
							"\r",
							"//update price\r",
							"var updated_price= pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"pm.environment.set(\"updated_price\",updated_price)\r",
							"\r",
							"//update deposit\r",
							"var updated_deposit= pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"updated_deposit\",updated_deposit)\r",
							"\r",
							"//update date\r",
							"const moment=require('moment')\r",
							"const today=moment()\r",
							"var updated_checkin=today.add(3,'D').add(3,'M').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"updated_checkin\",updated_checkin)\r",
							"\r",
							"// checkout\r",
							"const updated_checkout = today.add(7, 'days').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"updated_checkout\", updated_checkout)\r",
							"console.log(\"Check-out Date:\", updated_checkout)\r",
							"\r",
							"\r",
							"//update additional needs\r",
							"var updated_needs=pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"pm.environment.set(\"updated_needs\",updated_needs)\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"firstname\" : \"{{updated_firstName}}\",\r\n\"lastname\" : \"{{updated_lastName}}\",\r\n\"totalprice\" : {{updated_price}},\r\n\"depositpaid\" :{{updated_deposit}} ,\r\n\"bookingdates\" : {\r\n\"checkin\" : \"{{updated_checkin}}\",\r\n\"checkout\" : \"{{updated_checkout}}\"\r\n},\r\n\"additionalneeds\" : \"{{updated_needs}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "VerifyAfterUpdate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var json=pm.response.json()\r",
							"pm.test(\"First Name Validation after update\",function(){pm.expect(json.firstname).to.eql(pm.environment.get(\"updated_firstName\"))})\r",
							"var json=pm.response.json()\r",
							"pm.test(\"Last Name Validation after update\",function(){pm.expect(json.lastname).to.eql(pm.environment.get(\"updated_lastName\"))})\r",
							"var json=pm.response.json()\r",
							"pm.test(\"Total Price Validation after update\",function(){pm.expect(json.totalprice.toString()).to.eql(pm.environment.get(\"updated_price\"))})\r",
							"var json=pm.response.json()\r",
							"pm.test(\"Total Price Validation after update\",function(){pm.expect(json.depositpaid.toString()).to.eql(pm.environment.get(\"updated_deposit\"))})\r",
							"var json=pm.response.json()\r",
							"pm.test(\"Checkin date Validation\",function(){pm.expect(json.bookingdates.checkin).to.eql(pm.environment.get(\"updated_checkin\"))})\r",
							"var json=pm.response.json()\r",
							"pm.test(\"Checkout date Validation after update\",function(){pm.expect(json.bookingdates.checkout).to.eql(pm.environment.get(\"updated_checkout\"))})\r",
							"var json=pm.response.json()\r",
							"pm.test(\"additional needs Validation after update\",function(){pm.expect(json.additionalneeds).to.eql(pm.environment.get(\"updated_needs\"))})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}